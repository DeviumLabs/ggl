import React, { useEffect, useState } from "react";
import api from "../../services/api";
import Head from "next/head";
import Image from "next/image";

//Components
import Header from "../../components/header";
import Footer from "../../components/footer";
import Contact from "../../components/contact";
import Navbar from "../../components/navbar";

export async function getServerSideProps(context) {
  const category = context.query.slug;
  const slug = context.query.product;

  const res = await api.get(`/products?category=${category}&product=${slug}`);
  const categories = await api.get(`/category?category=${category}`);

  return {
    props: {
      product: res.data,
      categories: categories.data,
    },
  };
}

export default function SingleProduct({ product, categories }) {
  
  const [principalImage, setPrincipalImage] = useState(product.images[0]);
  const [titlePrincipal, setTitlePrincipal] = useState(product.models[0].name);
  const [table, setTable] = useState(0)

  // function handlePrincipalImage(image) {
  //   setPrincipalImage(image);
  // }

  if (product.error) {
    return (
      <div className="tw-h-[100vh] tw-flex tw-items-center tw-flex-col tw-justify-center tw-w-full">
        <h1>
          O Produto selecionado não existe ou possui informações de nome e
          categoria incorretos!
        </h1>
        <p>CÓDIGO DO ERRO: 404 Not found</p>
      </div>
    );
  }
  return (
    <div className="">
      <Head>
        <title>GGL Móveis de Aço | {product.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="tw-mt-[140px] tw-mb-[100px] tw-relative">
        <Navbar categories={categories} />
        <section
          id="product-wrapper"
          className="tw-flex tw-mb-[150px] tw-justify-between tw-flex-col lg:tw-flex-row tw-w-full md:tw-w-[85%] md:tw-ml-[15%] tw-px-[20px] tw-pt-[300px] md:tw-py-0 tw-gap-[20px]"
        >
          <div className="tw-w-full lg:tw-w-[50%] ">
            <div id="principal-image">
              <img
                src={principalImage}
                className="tw-w-[450px] tw-h-[430px] tw-object-contain"
              />
              <div className="tw-flex tw-mt-[20px] tw-w-full tw-overflow-x-auto tw-overflow-y-hidden md:tw-w-auto">
                {product.images.length > 1
                  && product.images.map((image, i) => (
                      <img
                        src={image}
                        key={i}
                        className="tw-w-[80px] tw-h-[80px] tw-object-contain tw-mr-[10px] hover:tw-scale-[1.1] tw-cursor-pointer"
                        onClick={() => {
                          setPrincipalImage(image);
                          setTable(i)
                          if (!!product.models[i]) {
                            setTitlePrincipal(product.models[i].name);
                          }
                        }}
                      />
                    ))}
              </div>
            </div>
            <div id="carousel-images"></div>
          </div>
          <div className="tw-w-full lg:tw-w-[50%] tw-mt-[50px] lg:tw-mt-0">
            <h1 className="tw-text-[38px]">{titlePrincipal}</h1>
            <p>{product.description}</p>
            <h1 className="tw-text-[32px] tw-mt-[50px]">Medidas</h1>
            <table className="tw-font-light tw-w-[calc(100vw-15%)] sm:tw-w-full tw-inline-block">
              <tbody className="tw-inline-block tw-w-[calc(100vw-15%)] md:tw-w-full tw-overflow-x-auto md:tw-w-auto">
                <tr className="tw-w-[800px] tw-min-w-[600px] tw-flex md:tw-w-full">
                  <td>Modelo</td>
                  <td>Altura</td>
                  <td>Largura</td>
                  <td>Profundidade</td>
                </tr>
                {product.models.map((model, i) => (
                  <tr className="tw-w-[800px] tw-min-w-[600px] tw-flex md:tw-w-full" style={{fontWeight: i === table ? 600 : 300}}>
                    <td>{model.name}</td>
                    <td>{model.scale.height}</td>
                    <td>{model.scale.width}</td>
                    <td>{model.scale.depth}</td>
                  </tr>
                ))}
              </tbody>
              {/* <tr className="tw-w-full">
                <th className="tw-w-[33%] tw-border-[1px] tw-border-black tw-py-[10px] tw-px-[15px] tw-text-start tw-font-light">
                  Altura
                </th>
                <th className="tw-w-[33%] tw-border-[1px] tw-border-black tw-py-[10px] tw-px-[15px] tw-text-start tw-font-light">
                  Altura
                </th>
                <th className="tw-w-[33%] tw-border-[1px] tw-border-black tw-py-[10px] tw-px-[15px] tw-text-start tw-font-light">
                  {product.scale.height}
                </th>
              </tr>
              <tr>
                <th className="tw-w-[50%] tw-border-[1px] tw-border-black tw-py-[10px] tw-px-[15px] tw-text-start tw-font-light">
                  Largura
                </th>
                <th className="tw-w-[50%] tw-border-[1px] tw-border-black tw-py-[10px] tw-px-[15px] tw-text-start tw-font-light">
                  {product.scale.width}
                </th>
              </tr>
              <tr>
                <th className="tw-w-[50%] tw-border-[1px] tw-border-black tw-py-[10px] tw-px-[15px] tw-text-start tw-font-light">
                  Profundidade
                </th>

                <th className="tw-w-[50%] tw-border-[1px] tw-border-black tw-py-[10px] tw-px-[15px] tw-text-start tw-font-light">
                  {product.scale.depth}
                </th>
              </tr> */}
            </table>
            <button
              type="submit"
              className="tw-bg-blue tw-mt-[30px] tw-text-white tw-w-[240px] tw-h-[50px] hover:tw-bg-white hover:tw-border-blue hover:tw-border-[1px] hover:tw-text-blue tw-transition-300"
            >
              Fazer Orçamento
            </button>
          </div>
        </section>
        <Contact />
      </main>
      <Footer />
    </div>
  );
}
